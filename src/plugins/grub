#!/bin/bash

#
# hardening -- hardening tool for Linux servers
# Copyright (C) 2014-2015 VMware, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# secure grub with password plugin
#

source "utils/utils.sh"
source "utils/genpasswd.sh"

GRUB_CONF="/boot/grub/grub.conf"
GRUB_PASSWD_FILE="/root/grub-password"
GRUB_PASSWD_REGEX='^password --md5'

secure_grub() {
	utils.log "grub" "Checking current ${GRUB_CONF}"

	if grep -q "${GRUB_PASSWD_REGEX}" "${GRUB_CONF}"; then
		utils.log_ok "grub" "grub is already secured. Nothing to change"
	else
		utils.log_warning "grub" "grub is not secured. Need to secure"
		if ! "${DRY}"; then
			utils.log "grub" "Generating new password for grub"
			local password="$(genpasswd.genpassword 8)"
			utils.log "grub" "You can find a generated password at ${GRUB_PASSWD_FILE}"
			echo "Your grub password is: ${password}" > "${GRUB_PASSWD_FILE}"

			utils.log "grub" "Changing ${GRUB_CONF} permissions to 600"
			chmod 600 "${GRUB_CONF}"

			utils.log "grub" "Updating ${GRUB_CONF}"
			local passwd_hash="$((echo ${password};echo ${password}) | grub-md5-crypt 2> /dev/null | tail -n1)"
			cp "${GRUB_CONF}" "${GRUB_CONF}.bak.$(date +%Y%m%d%H%M%S)"
			sed -i "1s|^|password --md5 ${passwd_hash}\n|" "${GRUB_CONF}"
			utils.log "grub" "Updated ${GRUB_CONF}"
		fi
	fi
}

parse_params() {
	local all_params="${@}"
	DRY="$(echo "${all_params}" | cut -d' ' -f1)"
}

main() {
	utils.log_start_plugin "grub"

	parse_params "${@}"
	secure_grub

	utils.log_end_plugin "grub"
}

main "${@}"
